"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[121],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return s}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=l(n),s=o,g=f["".concat(u,".").concat(s)]||f[s]||m[s]||i;return n?r.createElement(g,a(a({ref:t},p),{},{components:n})):r.createElement(g,a({ref:t},p))}));function s(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2900:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return p},default:function(){return f}});var r=n(3117),o=n(102),i=(n(7294),n(3905)),a=["components"],c={},u="Usage",l={unversionedId:"feature/geometric-distortion/example",id:"feature/geometric-distortion/example",title:"Usage",description:"The following example demonstrates how to distort an image by using cameracubiccurve operation\uff1a",source:"@site/docs/feature/geometric-distortion/example.md",sourceDirName:"feature/geometric-distortion",slug:"/feature/geometric-distortion/example",permalink:"/feature/geometric-distortion/example",editUrl:"https://github.com/vkit-x/vkit/edit/master/website/docs/feature/geometric-distortion/example.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Interface",permalink:"/feature/geometric-distortion/interface"},next:{title:"Camera-model Based Distortion",permalink:"/feature/geometric-distortion/camera"}},p=[],m={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"usage"},"Usage"),(0,i.kt)("p",null,"The following example demonstrates how to distort an image by using ",(0,i.kt)("inlineCode",{parentName:"p"},"camera_cubic_curve")," operation\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from vkit.image.type import Image\nfrom vkit.augmentation.geometric_distortion import (\n    CameraModelConfig,\n    CameraCubicCurveConfig,\n    camera_cubic_curve,\n)\n\n\ndef run(image_file, output_file):\n    image = Image.from_file(image_file)\n\n    config = CameraCubicCurveConfig(\n        curve_alpha=60,\n        curve_beta=-60,\n        curve_direction=0,\n        curve_scale=1.0,\n        camera_model_config=CameraModelConfig(\n            rotation_unit_vec=[1.0, 0.0, 0.0],\n            rotation_theta=30,\n        ),\n        grid_size=10,\n    )\n    result = camera_cubic_curve.distort(config, image)\n\n    result.image.to_file(output_file)\n\n")),(0,i.kt)("p",null,"Above script could be executed by ",(0,i.kt)("inlineCode",{parentName:"p"},"fireball")," (",(0,i.kt)("inlineCode",{parentName:"p"},"pip install fireball")," if you haven't install) directly:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'fib vkit_sln.vkit_doc_helper.demo_geo:run \\\n    --image_file="REQUIRED" \\\n    --output_file="REQUIRED"\n')),(0,i.kt)("p",null,"Input and output example\uff1a"),(0,i.kt)("div",{align:"center"},(0,i.kt)("img",{alt:"Lenna.png",src:"/geo/Lenna.png"}),(0,i.kt)("img",{alt:"demo_output.png",src:"/geo/output.png"})))}f.isMDXComponent=!0}}]);
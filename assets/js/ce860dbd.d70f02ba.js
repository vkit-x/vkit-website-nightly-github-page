"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[254],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,k=m["".concat(s,".").concat(d)]||m[d]||c[d]||r;return n?o.createElement(k,a(a({ref:t},u),{},{components:n})):o.createElement(k,a({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var p=2;p<r;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7608:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var o=n(3117),i=n(102),r=(n(7294),n(3905)),a=["components"],l={},s="Noise Related Distortion",p={unversionedId:"feature/photometric-distortion/noise",id:"feature/photometric-distortion/noise",title:"Noise Related Distortion",description:"gaussion_noise",source:"@site/docs/feature/photometric-distortion/noise.md",sourceDirName:"feature/photometric-distortion",slug:"/feature/photometric-distortion/noise",permalink:"/feature/photometric-distortion/noise",editUrl:"https://github.com/vkit-x/vkit/edit/master/website/docs/feature/photometric-distortion/noise.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Colorspace Related Distortion",permalink:"/feature/photometric-distortion/color"},next:{title:"Image Type",permalink:"/utility/image"}},u=[{value:"<code>gaussion_noise</code>",id:"gaussion_noise",children:[],level:2},{value:"<code>poisson_noise</code>",id:"poisson_noise",children:[],level:2},{value:"<code>impulse_noise</code>",id:"impulse_noise",children:[],level:2},{value:"<code>speckle_noise</code>",id:"speckle_noise",children:[],level:2}],c={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"noise-related-distortion"},"Noise Related Distortion"),(0,r.kt)("h2",{id:"gaussion_noise"},(0,r.kt)("inlineCode",{parentName:"h2"},"gaussion_noise")),(0,r.kt)("p",null,"Description: Superimpose gaussion noise"),(0,r.kt)("p",null,"Effect:"),(0,r.kt)("div",{align:"center"},(0,r.kt)("video",{width:"75%",height:"75%",autoplay:"true",muted:"true",playsinline:"true",loop:"true",controls:"ture"},(0,r.kt)("source",{src:"/pho/gaussion_noise.mp4",type:"video/mp4"}))),(0,r.kt)("p",null,"Import statement:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from vkit.augmentation.photometric_distortion import (\n    GaussionNoiseConfig,\n    gaussion_noise,\n)\n")),(0,r.kt)("p",null,"Configuration type:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@attr.define\nclass GaussionNoiseConfig:\n    std: float\n    rnd_state: Any = None\n")),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"std"),":  The standard deviation of gaussion noise"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rnd_state"),": Same as the description in ",(0,r.kt)("a",{parentName:"li",href:"/feature/photometric-distortion/color"},"Colorspace Related Distortion"))),(0,r.kt)("h2",{id:"poisson_noise"},(0,r.kt)("inlineCode",{parentName:"h2"},"poisson_noise")),(0,r.kt)("p",null,"Description: Superimpose poisson noise"),(0,r.kt)("p",null,"Effect:"),(0,r.kt)("div",{align:"center"},(0,r.kt)("video",{width:"75%",height:"75%",autoplay:"true",muted:"true",playsinline:"true",loop:"true",controls:"ture"},(0,r.kt)("source",{src:"/pho/poisson_noise.mp4",type:"video/mp4"}))),(0,r.kt)("p",null,"Import statement:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from vkit.augmentation.photometric_distortion import (\n    PoissonNoiseConfig,\n    poisson_noise,\n)\n")),(0,r.kt)("p",null,"Configuration type:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@attr.define\nclass PoissonNoiseConfig:\n    rnd_state: Any = None\n")),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rnd_state"),": Same as the description in ",(0,r.kt)("a",{parentName:"li",href:"/feature/photometric-distortion/color"},"Colorspace Related Distortion"))),(0,r.kt)("h2",{id:"impulse_noise"},(0,r.kt)("inlineCode",{parentName:"h2"},"impulse_noise")),(0,r.kt)("p",null,"Description: Superimpose impulse noise"),(0,r.kt)("p",null,"Effect:"),(0,r.kt)("div",{align:"center"},(0,r.kt)("video",{width:"75%",height:"75%",autoplay:"true",muted:"true",playsinline:"true",loop:"true",controls:"ture"},(0,r.kt)("source",{src:"/pho/impulse_noise.mp4",type:"video/mp4"}))),(0,r.kt)("p",null,"Import statement:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from vkit.augmentation.photometric_distortion import (\n    ImpulseNoiseConfig,\n    impulse_noise,\n)\n")),(0,r.kt)("p",null,"Configuration type:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@attr.define\nclass ImpulseNoiseConfig:\n    prob_salt: float\n    prob_pepper: float\n    rnd_state: Any = None\n")),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prob_salt"),": The probability to generate white noise pixel, aka the salt"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prob_pepper"),": The probability to generate black noise pixel, aka the pepper"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rnd_state"),": Same as the description in ",(0,r.kt)("a",{parentName:"li",href:"/feature/photometric-distortion/color"},"Colorspace Related Distortion"))),(0,r.kt)("h2",{id:"speckle_noise"},(0,r.kt)("inlineCode",{parentName:"h2"},"speckle_noise")),(0,r.kt)("p",null,"Description: Superimpose speckle noise"),(0,r.kt)("p",null,"Effect:"),(0,r.kt)("div",{align:"center"},(0,r.kt)("video",{width:"75%",height:"75%",autoplay:"true",muted:"true",playsinline:"true",loop:"true",controls:"ture"},(0,r.kt)("source",{src:"/pho/speckle_noise.mp4",type:"video/mp4"}))),(0,r.kt)("p",null,"Import statement:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from vkit.augmentation.photometric_distortion import (\n    SpeckleNoiseConfig,\n    speckle_noise,\n)\n")),(0,r.kt)("p",null,"Configuration type:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@attr.define\nclass SpeckleNoiseConfig:\n    std: float\n    rnd_state: Any = None\n")),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"std"),": The standard deviation of speckle noise"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rnd_state"),": Same as the description in ",(0,r.kt)("a",{parentName:"li",href:"/feature/photometric-distortion/color"},"Colorspace Related Distortion"))))}m.isMDXComponent=!0}}]);